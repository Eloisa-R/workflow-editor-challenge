{"ast":null,"code":"var _jsxFileName = \"/home/grelo/Documents/workflow-editor-challenge/client/src/components/Flowchart.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ReactFlow from 'react-flow-renderer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst workflowId = '61fea900ffeccf261074b235';\n\nfunction Flowchart() {\n  _s();\n\n  useEffect(() => {\n    async function getWorkflow() {\n      const {\n        data\n      } = await axios.get(`${process.env.REACT_APP_SERVER_BASE_URL}/workflow/${workflowId}`);\n      setWorkflow(data);\n    }\n\n    getWorkflow();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ReactFlow, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Flowchart, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Flowchart;\nexport default Flowchart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Flowchart\");","map":{"version":3,"sources":["/home/grelo/Documents/workflow-editor-challenge/client/src/components/Flowchart.js"],"names":["useState","useEffect","axios","ReactFlow","workflowId","Flowchart","getWorkflow","data","get","process","env","REACT_APP_SERVER_BASE_URL","setWorkflow"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;AAEA,MAAMC,UAAU,GAAG,0BAAnB;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AAEjBJ,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeK,WAAf,GAA6B;AACzB,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAML,KAAK,CAACM,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,yBAA0B,aAAYP,UAAW,EAA1E,CAAvB;AACAQ,MAAAA,WAAW,CAACL,IAAD,CAAX;AACH;;AACDD,IAAAA,WAAW;AACd,GANQ,EAMN,EANM,CAAT;AAQA,sBACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GAbQD,S;;KAAAA,S;AAeT,eAAeA,SAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ReactFlow from 'react-flow-renderer';\n\nconst workflowId = '61fea900ffeccf261074b235'\n\nfunction Flowchart() {\n\n    useEffect(() => {\n        async function getWorkflow() {\n            const { data } = await axios.get(`${process.env.REACT_APP_SERVER_BASE_URL}/workflow/${workflowId}`)\n            setWorkflow(data);\n        }\n        getWorkflow()\n    }, [])\n\n    return (\n        <ReactFlow />\n    )\n}\n\nexport default Flowchart;"]},"metadata":{},"sourceType":"module"}